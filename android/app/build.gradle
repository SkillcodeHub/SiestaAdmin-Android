def localProperties = new Properties()
def localPropertiesFile = rootProject.file('local.properties')
if (localPropertiesFile.exists()) {
    localPropertiesFile.withReader('UTF-8') { reader ->
        localProperties.load(reader)
    }
}

def flutterRoot = localProperties.getProperty('flutter.sdk')
if (flutterRoot == null) {
    throw new GradleException("Flutter SDK not found. Define location with flutter.sdk in the local.properties file.")
}

def flutterVersionCode = localProperties.getProperty('flutter.versionCode')
if (flutterVersionCode == null) {
    flutterVersionCode = '1'
}

def flutterVersionName = localProperties.getProperty('flutter.versionName')
if (flutterVersionName == null) {
    flutterVersionName = '1.0'
}

apply plugin: 'com.android.application'
apply plugin: 'com.google.gms.google-services'
apply plugin: 'kotlin-android'
apply from: "$flutterRoot/packages/flutter_tools/gradle/flutter.gradle"
apply plugin: 'com.google.firebase.crashlytics'
def keystoreProperties = new Properties()
def keystorePropertiesFile = rootProject.file('key.properties')
if (keystorePropertiesFile.exists()) {
       keystoreProperties.load(new FileInputStream(keystorePropertiesFile))
}

android {
    compileSdkVersion 34
    ndkVersion flutter.ndkVersion

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    kotlinOptions {
        jvmTarget = '1.8'
    }

    sourceSets {
        main.java.srcDirs += 'src/main/kotlin'
    }

    defaultConfig {
        // TODO: Specify your own unique Application ID (https://developer.android.com/studio/build/application-id.html).
        applicationId "com.siestaadmin.dot2dot"
        // You can update the following values to match your application needs.
        // For more information, see: https://docs.flutter.dev/deployment/android#reviewing-the-gradle-build-configuration.
        minSdkVersion 29
        targetSdkVersion 34
        versionCode flutterVersionCode.toInteger()
        versionName flutterVersionName
        multiDexEnabled true
        // testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

    }
       signingConfigs {
       release {
           keyAlias keystoreProperties['keyAlias']
           keyPassword keystoreProperties['keyPassword']
           storeFile keystoreProperties['storeFile'] ? file(keystoreProperties['storeFile']) : null
           storePassword keystoreProperties['storePassword']
       }
   }

    buildTypes {
       release {
            signingConfig signingConfigs.release
            minifyEnabled false
            shrinkResources false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        
       }
   }
       aaptOptions {
        cruncherEnabled = false
    }
}

flutter {
    source '../..'
}

dependencies {
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    implementation 'androidx.multidex:multidex:2.0.1'


}


// def localProperties = new Properties()
// def localPropertiesFile = rootProject.file('local.properties')
// if (localPropertiesFile.exists()) {
//     localPropertiesFile.withReader('UTF-8') { reader ->
//         localProperties.load(reader)
//     }
// }

// def flutterRoot = localProperties.getProperty('flutter.sdk')
// if (flutterRoot == null) {
//     throw new GradleException("Flutter SDK not found. Define location with flutter.sdk in the local.properties file.")
// }

// def flutterVersionCode = localProperties.getProperty('flutter.versionCode')
// if (flutterVersionCode == null) {
//     flutterVersionCode = '1'
// }

// def flutterVersionName = localProperties.getProperty('flutter.versionName')
// if (flutterVersionName == null) {
//     flutterVersionName = '1.0'
// }

// apply plugin: 'com.android.application'
// apply plugin: 'kotlin-android'
// apply from: "$flutterRoot/packages/flutter_tools/gradle/flutter.gradle"

// def keystoreProperties = new Properties()
// def keystorePropertiesFile = rootProject.file('key.properties')
// if (keystorePropertiesFile.exists()) {
//     keystoreProperties.load(new FileInputStream(keystorePropertiesFile))
// }

// android {
//     namespace "com.siestaadmin.dot2dot"
//     compileSdkVersion 34
//     ndkVersion flutter.ndkVersion

//     compileOptions {
//         sourceCompatibility JavaVersion.VERSION_11
//         targetCompatibility JavaVersion.VERSION_11
//     }

//     kotlinOptions {
//         jvmTarget = '11'
//     }

//     sourceSets {
//         main.java.srcDirs += 'src/main/kotlin'
//     }

//     defaultConfig {
//         applicationId "com.siestaadmin.dot2dot"
//         minSdkVersion 23
//         targetSdkVersion 34
//         versionCode flutterVersionCode.toInteger()
//         versionName flutterVersionName
//         multiDexEnabled true
//         testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
//     }

//     signingConfigs {
//         release {
//             keyAlias keystoreProperties['keyAlias']
//             keyPassword keystoreProperties['keyPassword']
//             storeFile keystoreProperties['storeFile'] ? file(keystoreProperties['storeFile']) : null
//             storePassword keystoreProperties['storePassword']
//         }
//     }

//     buildTypes {
//         release {
//             signingConfig signingConfigs.release
//             minifyEnabled false
//             shrinkResources false
//             proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            
//             ndk {
//                 abiFilters 'armeabi-v7a', 'arm64-v8a', 'x86_64'
//             }
//         }
        
//         debug {
//             minifyEnabled false
//             shrinkResources false
//         }
//     }

//     packagingOptions {
//         exclude 'META-INF/DEPENDENCIES'
//         exclude 'META-INF/LICENSE'
//         exclude 'META-INF/LICENSE.txt'
//         exclude 'META-INF/license.txt'
//         exclude 'META-INF/NOTICE'
//         exclude 'META-INF/NOTICE.txt'
//         exclude 'META-INF/notice.txt'
//         exclude 'META-INF/*.kotlin_module'
//         pickFirst 'lib/armeabi-v7a/libc++_shared.so'
//         pickFirst 'lib/arm64-v8a/libc++_shared.so'
//         pickFirst 'lib/x86_64/libc++_shared.so'
//     }

//     dexOptions {
//         javaMaxHeapSize "4g"
//         preDexLibraries = false
//         additionalParameters = [
//             '--multi-dex',
//             '--set-max-idx-number=50000'
//         ]
//         keepRuntimeAnnotatedClasses false
//     }

//     lint {
//         disable 'InvalidPackage'
//         checkReleaseBuilds false
//     }
// }

// flutter {
//     source '../..'
// }

// dependencies {
//     implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version"
//     implementation 'androidx.multidex:multidex:2.0.1'
//     implementation 'com.android.support:multidex:1.0.3'
    
//     // Add Firebase dependencies if you're using them
//     implementation platform('com.google.firebase:firebase-bom:32.7.0')
//     implementation 'com.google.firebase:firebase-analytics'
    
//     // Add Play Services dependencies
//     implementation 'com.google.android.gms:play-services-base:18.3.0'
//     implementation 'com.google.android.gms:play-services-measurement-api:21.5.0'
// }

// configurations.all {
//     resolutionStrategy {
//         force 'androidx.core:core-ktx:1.12.0'
//         force 'org.jetbrains.kotlin:kotlin-stdlib:1.9.10'
//         force 'org.jetbrains.kotlin:kotlin-stdlib-common:1.9.10'
//     }
// }